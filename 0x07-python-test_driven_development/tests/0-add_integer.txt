The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

This module defines an integer addition function ``add_integer(a, b=98)``.

Usage
=====
::
    >>> add_integer =  __import__('0-add_integer').add_integer
    >>> add_integer(1,2)
    3

::
    >>> add_integer(-1,5)
    4

The function works with floating point value
Notice: float value are converted into integer before addition

::
    >>> add_integer(5.0,5.0)
    10

::
    >>> add_integer(1.0, 2.0)
    3

::

One argument can be passed to the function
Notice: the second argument is by default b=98

::
    >>> add_integer(10)
    108


 Non-Numbers
 ===========

 The function ``add_integer`` expects that both argument passed either integers or floats.
 If either argument is not integer or float, a TypeError is raised

 ::
    >>> add_integer("Tom")
    Traceback (most recent call last)
    ...
    TypeError: a must be an integer

 ::
    >>> add_integer(2, "Tom")
    Traceback (most recent call last)
    ...
    TypeError: b must be an integer

  ::
    >>> add_integer(None)
    Traceback (most recent call last)
    ...
    TypeError: a must be an integer

 ::
    >>> add_integer(None,2.3)
    Traceback (most recent call last)
    ...
    TypeError: a must be an integer

If both arguments are non-integers and non-floats, a TypeError message is only
printed for the first argument.

::

    >>> add_integer("hello", "there")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

The function will fail if infinity is provided.

::

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer


::

    >>> add_integer(2, float('inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

And again with NaN numbers.

::

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

::

    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer







